 In the last presentations we have learned what is a compiler and what is an interpreter. Now we are ready to address this question is python compiled or interpreted. So without any further delay let's get started. The first topic of this presentation is is python compiled or interpreted. The second topic is demo of how to see the byte code. First we will address this question is python compiled or interpreted. We will try to find the answer to this question now. The short answer to this question is python is both compiled and interpreted language. This means that python is a hybrid language. In the last presentation we have learned what is a hybrid language. A hybrid language is a language which uses both compiler and interpreter for its translation. Similarly python also needs both compiler and interpreter for its translation. We know the complete process of translation. First the source code is provided to compiler. source code must have an extension dot py because the source code is written in python. So py is short for python. Source code must be provided to compiler and compiler in turn generates byte code. The extension of byte code is dot pyc. Now byte code is also called as an intermediate code because this code will be provided now to the interpreter and interpreter in turn will generate machine code. Obviously not an executable which we can run but it will generate the machine code on the fly. So compiler needs source code and in turn generates byte code. It will never generate machine code. Remember this. This byte code we can provide to python virtual machine or pvm which can be installed on any machine. It can be windows, it can be linux, it can be mac, it doesn't really matter. PVM must be installed on a machine which needs to run the byte code. byte code is well understood by pvm. If you remember in the last lecture instead of pvm we have interpreter. In reality interpreter is part of pvm. pvm could be thought of as a package which consists of the other useful stuff along with interpreter. So python virtual machine has interpreter inbuilt and we can provide byte code to pvm. pvm in turn generates machine code on the fly which we can never see but we will always see the output generated. In this way we will get the output. Now we know how the translation works and we also know that python is both compiled and interpreted language. In the definition I told you that python is an interpreted language but it is not a complete truth. python is both compiled and interpreted language. Now you know the complete truth. Now we have learned that python is both compiled and interpreted. This means we are done with this topic. Now we are ready to see the demo of how to see the byte code. In reality when you run the code you will never see the byte code. In order to see the byte code we just need to compile the code but when you just simply run the python code you will compile as well as interpret the code. I will show you the complete process of how to see the byte code. For this we need to go to my desktop. We are in my desktop and I want to create a new folder here with the name python programs. For this I will right click on this desktop and click on new and here I will click on this folder. Now I will name this folder python programs. You can observe that an empty folder is now created. Let me drag this over here in this empty space. If I double click on this you can observe that this folder is empty. Let me close this. Now I would like to create a notepad file so that I would be able to write the python code in that notepad file. I already have this notepad shortcut but you might need to search for this notepad. You can always do that. So let's double click on this. You can observe that this is an untitled notepad. I want to write my code in this notepad file. It is always possible to write python code in notepad file. There are other ways as well. We can write the code in IDE. We can also write the code in the interactive shell in the command prompt. There are many ways to write code in python but I chose this way because we are well aware about the notepad. I don't want you to install any software. For this I chose notepad. So now let me write the python code here. I want to print the message hello on the screen. For this I will use the python print function. So now let me write the print function along with the message. So this is the print function and in this print function you can observe that I have written this message hello. This message must be written within single codes or you can write this message within double codes as well. It doesn't really matter. The python allows us to include strings like this within single codes or double codes. Now I would like to save this file and that too in the python programs folder. For this I need to click on this file and save as you can observe this that it is redirecting me to the python programs folder. It might not be the case when you first time save this file. In order to save this file in the correct folder first you need to visit that folder and then you need to save the file with the name hello.py. And here you need to change the type as well. You need to select all files. Okay. Then click on save. This will save your file. You can observe this in this python programs folder as well. That we have this hello.py file. You can right click on it and click on properties. You'll observe that the extension of this file is dot py. Let's click on okay. Now we are ready to execute this file. We have this file. Now we can execute this file in the command prompt. Let me close this folder for now and close this file as well. Now you need to go to the command prompt and here first you need to write the exact location where the hello.py stored. We know that hello.py file is stored in python programs folder which is in the desktop. So I need to write this command CD desktop slash python programs. CD is the command which we can use to change the directory. So CD stands for change directory. I want to visit this directory that is python programs. For this I have written this command CD desktop slash python programs. Now I will press enter. We are now in the correct directory python programs. Now we are ready to execute our python file. For this you need to have python installed on your machine. If you already know the process of installation then you can directly install the python on your machine. If python doesn't come by default you need to download it from its official website. If you are new to python then you might not know the process of installation. I will tell you the exact process of installation later. Here in order to run hello.py file I need to type python space hello.py. Now I need to press enter. You can observe the output is hello. This is what I wanted and I got this output as well. Now let's open the python programs folder and let's see whether we have any of the file apart from hello.py or not. You can observe that in this python programs folder we just have this hello.py file. There is no other file. But we were expecting bytecode file as well because we know that python is a hybrid language and this means that compilation and interpretation both must have happened. But it seems like only interpretation has happened and that is why we are getting this output hello on the screen. But this is not the complete truth. Compilation step is hidden from us. We will never see the bytecode generated but it has been generated. In order to see the bytecode we need to do some extra work. Let's now again go to our command prompt and see the complete process of how to see the bytecode. In order to see the bytecode we need to first open the interactive shell where we can type python commands. For this we need to type python here and then press enter. You will observe these three arrows here which means that interactive shell is now active. We are ready to type in the commands here. For now just forget about these statements written here. You just need to see this that we have these three arrows which indicates that interactive shell of python is now active and we are now ready to type in the python commands here. In order to see the bytecode file we just need to compile our code and not interpret the code. In order to just compile the code we need to import one module called pi compile. A module is something which consists of a lot of functions which we can use in our code. Here we want to import pi compile module in order to compile the code. Just compile the code. We don't want to interpret the code. For this we need to include that pi compile module and for this we need to type this command import pi compile. This module has a function called compile which we can use to compile the code. Let's press enter. As there is no error we can continue. In order to call the function which is available in this pi compile module we need to first type the name of the module followed by dot and then the name of the function which we want to use. Name of this module is pi compile. So let me write pi compile here first followed by dot and then I need to write the function which I want to use to compile my code. Compile function is available in pi compile module. We can use that function here. So I need to type compile followed by opening parentheses. Here I need to write the name of the file within double quotes or single quotes. It's your choice. I will use single quotes and I will write the name of the file within single quotes. And then after this I need to add a closing parentheses and that's it. In this way I would be able to compile my file that is hello dot pi. I now need to press enter. You can observe this line underscore underscore pi cache underscore underscore double slash hello dot see python hyphen 310 dot p y c and we know this already that dot p y c is the extension of the bytecode file and the bytecode file is now generated. This bytecode file is available in this pi cache folder and this pi cache folder is available in python programs folder. Let's open this folder now. You can see there is a pi cache folder. Now you can open this and here you will observe hello dot see python hyphen 310. This is the compiled python file. You can although right click on this file. Check the properties. You can observe this that this is the compiled python file with dot p y c extension. Let's click on OK. So we can say this that this is the bytecode file generated. If you want to see the content of this bytecode file then you need to open this in notepad. Let's open this file with notepad. This is the bytecode file and obviously we cannot understand this although interpreter is capable enough to understand this file. We can provide this file to any machine which has pvm or interpreter installed on it. That interpreter is capable of understanding this file and it is capable of generating the output as well. I hope the complete process of how to see the bytecode is clear to you. So we have seen that python is both compiled and interpreted language and we have seen the demo as well of how to see the bytecode. This means that we are done with this lecture. OK friends this is it for now. Thank you for watching this lecture. I'll see you in the next one.